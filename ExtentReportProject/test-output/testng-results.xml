<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="6" passed="3" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-07-22T01:41:09Z" name="Main Test Suite" finished-at="2021-07-22T01:41:11Z" duration-ms="1312">
    <groups>
    </groups>
    <test started-at="2021-07-22T01:41:09Z" name="Extent Report Test" finished-at="2021-07-22T01:41:11Z" duration-ms="1312">
      <class name="testNGPkg.ExtentReportPgm">
        <test-method is-config="true" signature="startReport(java.lang.String, java.lang.String)[pri:0, instance:testNGPkg.ExtentReportPgm@2e005c4b]" started-at="2021-07-22T01:41:09Z" name="startReport" finished-at="2021-07-22T01:41:10Z" duration-ms="382" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method signature="testCase1()[pri:0, instance:testNGPkg.ExtentReportPgm@2e005c4b]" started-at="2021-07-22T01:41:10Z" name="testCase1" finished-at="2021-07-22T01:41:10Z" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase1 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testNGPkg.ExtentReportPgm@2e005c4b]" started-at="2021-07-22T01:41:10Z" name="getResult" finished-at="2021-07-22T01:41:10Z" duration-ms="33" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCase1 status=SUCCESS method=ExtentReportPgm.testCase1()[pri:0, instance:testNGPkg.ExtentReportPgm@2e005c4b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="testCase2()[pri:0, instance:testNGPkg.ExtentReportPgm@2e005c4b]" started-at="2021-07-22T01:41:10Z" name="testCase2" finished-at="2021-07-22T01:41:10Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase2 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testNGPkg.ExtentReportPgm@2e005c4b]" started-at="2021-07-22T01:41:10Z" name="getResult" finished-at="2021-07-22T01:41:10Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCase2 status=SUCCESS method=ExtentReportPgm.testCase2()[pri:0, instance:testNGPkg.ExtentReportPgm@2e005c4b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="testCase3()[pri:0, instance:testNGPkg.ExtentReportPgm@2e005c4b]" started-at="2021-07-22T01:41:10Z" name="testCase3" finished-at="2021-07-22T01:41:10Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase3 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testNGPkg.ExtentReportPgm@2e005c4b]" started-at="2021-07-22T01:41:10Z" name="getResult" finished-at="2021-07-22T01:41:10Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCase3 status=SUCCESS method=ExtentReportPgm.testCase3()[pri:0, instance:testNGPkg.ExtentReportPgm@2e005c4b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="testCase4()[pri:0, instance:testNGPkg.ExtentReportPgm@2e005c4b]" started-at="2021-07-22T01:41:10Z" name="testCase4" finished-at="2021-07-22T01:41:10Z" duration-ms="3" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at testNGPkg.ExtentReportPgm.testCase4(ExtentReportPgm.java:76)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase4 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testNGPkg.ExtentReportPgm@2e005c4b]" started-at="2021-07-22T01:41:10Z" name="getResult" finished-at="2021-07-22T01:41:10Z" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCase4 status=FAILURE method=ExtentReportPgm.testCase4()[pri:0, instance:testNGPkg.ExtentReportPgm@2e005c4b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="testCase5()[pri:0, instance:testNGPkg.ExtentReportPgm@2e005c4b]" started-at="2021-07-22T01:41:10Z" name="testCase5" finished-at="2021-07-22T01:41:10Z" duration-ms="4" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping this test with exception]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping this test with exception
at testNGPkg.ExtentReportPgm.testCase5(ExtentReportPgm.java:82)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase5 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testNGPkg.ExtentReportPgm@2e005c4b]" started-at="2021-07-22T01:41:10Z" name="getResult" finished-at="2021-07-22T01:41:10Z" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCase5 status=SKIP method=ExtentReportPgm.testCase5()[pri:0, instance:testNGPkg.ExtentReportPgm@2e005c4b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testNGPkg.ExtentReportPgm@2e005c4b]" started-at="2021-07-22T01:41:10Z" name="tearDown" finished-at="2021-07-22T01:41:11Z" duration-ms="794" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testNGPkg.ExtentReportPgm -->
    </test> <!-- Extent Report Test -->
  </suite> <!-- Main Test Suite -->
</testng-results>
